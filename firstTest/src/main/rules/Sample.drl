package com.sample
 
import com.sample.DroolsTest.Message;
import com.sample.Angle;
import com.sample.Point;
import com.sample.Line;
import com.sample.GeoType;



rule "parrell"
    when
    	
    	
    	$a : Point (type == GeoType.POINT) 
    	$b : Point (type == GeoType.POINT, this != $a) 
    	$c : Point (type == GeoType.POINT, this != $a, this != $b) 
    	$d : Point (type == GeoType.POINT, this != $a, this != $b, this != $c)
    	$e : Point (type == GeoType.POINT, this != $a, this != $b, this != $c, this != $d)
    	
    	
    	

    	GeoRelation  ( (firstItem.type == GeoType.LINE) 
    	&& ( $lineAB : ((Line)firstItem) )
    	&& ( $lineAB.endPoints[0].name == $a.name )
    	&& ( $lineAB.endPoints[1].name == $b.name )
    	&& ( secondItem.type == GeoType.POINT )
    	
    	&& ( relation == Relation.ON_THE_LINE ) 
    	
    	&& ( $pointOnAB : ((Point)secondItem ))
    	&& ( $pointOnAB.name == $d.name)
    	
    	)
    	
    	GeoRelation  ( (firstItem.type == GeoType.LINE) 
    	&& ( $lineAC : ((Line)firstItem) )
    	&& ( $lineAC.endPoints[0].name == $a.name )
    	&& ( $lineAC.endPoints[1].name == $c.name )
    	&& ( secondItem.type == GeoType.POINT )
    	
    	&& ( relation == Relation.ON_THE_LINE ) 
    	
    	&& ( $pointOnAC : ((Point)secondItem ))
    	&& ( $pointOnAC.name == $e.name)
    	
       	)
    	
    	GeoRelation (
    	(
    	firstItem.type == GeoType.LINE) 
    	&& ( $lineAD : ((Line)firstItem) )
    	&& ( $lineAD.endPoints[0].name == $a.name )
    	&& ( $lineAD.endPoints[1].name == $d.name )
    	
    	&& ( relation == Relation.EQUALS ) 
    	
    	&& ( secondItem.type == GeoType.LINE) 
    	&& ( $lineDB : ((Line)secondItem) )
    	&& ( $lineDB.endPoints[0].name == $d.name )
    	&& ( $lineDB.endPoints[1].name == $b.name )    	
    	)
    	
    	GeoRelation (
    	(
    	firstItem.type == GeoType.LINE) 
    	&& ( $lineAE : ((Line)firstItem) )
    	&& ( $lineAE.endPoints[0].name == $a.name )
    	&& ( $lineAE.endPoints[1].name == $e.name )
    	
    	&& ( relation == Relation.EQUALS ) 
    	
    	&& ( secondItem.type == GeoType.LINE) 
    	&& ( $lineEC : ((Line)secondItem) )
    	&& ( $lineEC.endPoints[0].name == $e.name )
    	&& ( $lineEC.endPoints[1].name == $c.name )
    	
    	)
    	
    	$lineDE : Line ((type == GeoType.LINE)
    	&&($lineDE.endPoints[0].name == $d.name)
    	&&($lineDE.endPoints[1].name == $e.name)
    
    	) 
    	
    	$lineBC : Line ((type == GeoType.LINE)
    	&&($lineBC.endPoints[0].name == $b.name)
    	&&($lineBC.endPoints[1].name == $c.name)
    
    	) 

        //Line ($lineAB.endPoints[1].name == $a.name)
    then
        
		System.out.println(""+$d.name+$e.name+" is parrell to "+$b.name+$c.name);
		System.out.println(""+$d.name+$e.name+" is half of "+$b.name+$c.name);
		//System.out.println(""+$lineDE.endPoints[0].name + " "+$lineDE.endPoints[1].name);
		//System.out.println($lineDE.endPoints[0].name == $d.name);
		
		GeoRelation DEParrBC = new GeoRelation($lineDE, $lineBC, Relation.PARALLEL_LINES);
		
		
		insert(DEParrBC);
end



rule "parrell lines"
    when
    	
    	
    	$a : Point (type == GeoType.POINT) 
    	$b : Point (type == GeoType.POINT) 
    	$c : Point (type == GeoType.POINT) 
    	$d : Point (type == GeoType.POINT)
    	
    	$angelOne : Angle(type == GeoType.ANGLE) 
    	$angelTwo : Angle(type == GeoType.ANGLE) 
    	
    	Angle ($angelOne.middle.name == $angelTwo.pointOne.name) 
    	Angle ($angelTwo.middle.name == $angelOne.pointThree.name) 
    	
    	$relation : GeoRelation (relation == Relation.EQUALS)
    	
    	GeoRelation  ( (firstItem.type == GeoType.ANGLE) 
    	&& (  $firstAngle : ((Angle)firstItem) ) 
    	&& (secondItem.type == GeoType.ANGLE) 
    	&& ( $secondAngle : ((Angle)secondItem)) )

    	
    	Angle( $firstAngle.pointOne.name == $a.name &&
    	$firstAngle.middle.name == $b.name &&
    	$firstAngle.pointThree.name == $c.name &&
    	$secondAngle.pointOne.name == $b.name &&
    	$secondAngle.middle.name == $c.name &&
    	$secondAngle.pointThree.name == $d.name  )
    	
    	not  Point ($a.name == $b.name )
    	not  Point ($a.name == $c.name )
    	not  Point ($a.name == $d.name )
    	not  Point ($b.name == $c.name )
    	not  Point ($b.name == $d.name )
    	not  Point ($c.name == $d.name )
    	

        
    then

        
        System.out.println(""+$a.name+$b.name+" parrell to "+ $c.name + $d.name);
end

rule "parrell lines new"
    when
    	

    	$angelOne : Angle(type == GeoType.ANGLE) 
    	$angelTwo : Angle(type == GeoType.ANGLE) 
    	
    	$relation : GeoRelation (relation == Relation.EQUALS)

    	Angle ($angelTwo.isACornerPoint($angelOne.middle.name)) 
    	Angle ($angelOne.isACornerPoint($angelTwo.middle.name)) 
    	
    	
    	//exists( h : Angle (type == GeoType.ANGLE) )
    	

        
    then
        Point a = null;
        Point b = $angelOne.middle;
        Point c = $angelTwo.middle;
        Point d = null;
        
        if($angelOne.pointOne.name == $angelTwo.middle.name ){
         a = $angelOne.pointThree;
        }
        else
        {
        a = $angelOne.pointOne;
        }
        
        if($angelTwo.pointOne.name == $angelOne.middle.name ){
        d = $angelTwo.pointThree;
        }
        else
        {
        d = $angelTwo.pointOne;
        
        }
        if(a != null && d != null)
        System.out.println(""+a.name+b.name+" is parrell to "+c.name+d.name);
        
end


rule "distinct"
    when
    	
    	//$a : Point (type == GeoType.POINT) 
    	//$b : Point (type == GeoType.POINT) 
    	
    	$a : Point (type == GeoType.POINT) 
    	$b : Point (type == GeoType.POINT) 
    	//Point ($a.name == $b.name )
    	
    	not  Point ($a.name == $b.name )
    	
    	//exists( h : Angle (type == GeoType.ANGLE) )
    	

        
    then
        //System.out.println( "distinct "+$a.name+ " " +$b.name );
        //update( m );
end

rule "parrell lines angles"
    when
    	
    	$relation : GeoRelation (relation == Relation.PARALLEL_LINES  )
    	
		GeoRelation  ( (firstItem.type == GeoType.LINE) 
    	&& ( $lineAB : ((Line)firstItem) )
    	&& ( secondItem.type == GeoType.LINE )
    	&& ( relation == Relation.PARALLEL_LINES ) 
    	&& ( $lineCD : ((Line)secondItem ))
		)
        
    then

        
        //System.out.println("parrlell lines exists"+$relation.firstItem);
end


rule "is angle"
    when
    	exists( f : Angle (type == GeoType.ANGLE) )
    	exists( g : Angle (type == GeoType.ANGLE) )
    	//exists( h : Angle (type == GeoType.ANGLE) )
    	

        
    then
        //System.out.println( "we have an angle" );
        //update( m );
end


 
rule "Hello World"
    when
        m : Message( status == Message.HELLO, myMessage : message )
    then
        //System.out.println( myMessage );
        m.setMessage( "Goodbye cruel world" );
        m.setStatus( Message.GOODBYE );
        update( m );
end

rule "GoodBye"
    when
        m: Message( status == Message.GOODBYE, myMessage : message )
    then
        //System.out.println( myMessage );
              m.setStatus( Message.GOODBYE );
        update( m );
end
